name: ci

on:
  workflow_dispatch:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

jobs:
  test-basic:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --break-system-packages -e .
          python -m pip install --break-system-packages pytest pytest-cov ruff

      - name: Run basic tests (placeholder mode)
        env:
          TMEQ_RUN_CURVELETS: "0"
          QT_QPA_PLATFORM: "offscreen"
        run: |
          pytest -q -vv tests/curvealign_py/ tests/ctfire_py/ tests/test_unified_api.py tests/test_curvelops_basic.py

  test-curvelab:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc g++ make wget curl

      - name: Download and build FFTW 2.1.5
        run: |
          mkdir -p utils
          cd utils
          wget -O fftw-2.1.5.tar.gz http://www.fftw.org/fftw-2.1.5.tar.gz
          tar xzf fftw-2.1.5.tar.gz
          cd fftw-2.1.5
          ./configure --prefix="$(pwd)" --disable-fortran
          make -j"$(nproc)"
          make install
          ln -sf include fftw

      - name: Download CurveLab (secure server)
        env:
          RESTRICTED_USER: ${{ secrets.RESTRICTED_USER }}
          RESTRICTED_PASSWORD: ${{ secrets.RESTRICTED_PASSWORD }}
          RESTRICTED_URL: ${{ secrets.RESTRICTED_URL }}
        run: |
          cd utils
          echo "Downloading CurveLab from secure server..."
          echo "Using URL stored in secret"
          curl -fL -u "${RESTRICTED_USER}:${RESTRICTED_PASSWORD}" -O "${RESTRICTED_URL}"
          ls -la
          tar xzf CurveLab-2.1.3.tar.gz

      - name: Build CurveLab from source
        run: |
          cd utils/CurveLab-2.1.3
          cd fdct_wrapping_cpp/src && make && cd ../..
          cd fdct3d/src && make && cd ../../..

      - name: Set up environment variables
        run: |
          echo "FFTW=$(pwd)/utils/fftw-2.1.5" >> $GITHUB_ENV
          echo "FDCT=$(pwd)/utils/CurveLab-2.1.3" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(pwd)/utils/fftw-2.1.5/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(pwd)/utils/fftw-2.1.5/lib" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --break-system-packages -e ".[curvelops]"
          python -m pip install --break-system-packages pytest pytest-cov ruff

      - name: Test CurveLab compilation
        run: |
          echo "Testing CurveLab compilation..."
          if [ -f "utils/CurveLab-2.1.3/fdct_wrapping_cpp/src/fdct_wrapping_cpp" ]; then
            echo "✅ fdct_wrapping_cpp built successfully"
          else
            echo "❌ fdct_wrapping_cpp build failed"
            exit 1
          fi

          if [ -f "utils/CurveLab-2.1.3/fdct3d/src/fdct3d" ]; then
            echo "✅ fdct3d built successfully"
          else
            echo "❌ fdct3d build failed"
            exit 1
          fi

      - name: Run tests with CurveLab
        env:
          TMEQ_RUN_CURVELETS: "1"
          QT_QPA_PLATFORM: "offscreen"
        run: |
          python tests/test_curvelops_basic.py
          pytest -q -vv tests/curvealign_py/ tests/ctfire_py/ tests/test_unified_api.py tests/test_curvelops_basic.py
