[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "curvealign"
version = "0.1.0"
description = "Python API for collagen fiber analysis using curvelet transforms"
readme = "README.md"
license = {text = "BSD-2-Clause"}
authors = [
    {name = "Laboratory for Optical and Computational Instrumentation", email = "loci@wisc.edu"},
]
maintainers = [
    {name = "LOCI Team", email = "loci@wisc.edu"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["microscopy", "collagen", "fiber", "curvelet", "image-analysis", "bioimage"]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "scikit-image>=0.18.0",
    "tifffile>=2021.1.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme",
    "numpydoc",
]
visualization = [
    "matplotlib>=3.3.0",  # For standalone backend
]
napari = [
    "napari[all]>=0.4.0",  # For napari integration
    "qtpy",
]
imagej = [
    "pyimagej>=1.4.0",  # For ImageJ integration
]
curvelet = [
    "pycurvelets",  # If available for FDCT
]
all = [
    "matplotlib>=3.3.0",
    "napari[all]>=0.4.0", 
    "qtpy",
    "pyimagej>=1.4.0",
    "pycurvelets",
]

[project.urls]
Homepage = "https://github.com/uw-loci/curvelets"
Documentation = "https://loci.wisc.edu/software/curvealign"
Repository = "https://github.com/uw-loci/curvelets"
Issues = "https://github.com/uw-loci/curvelets/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["curvealign*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=curvealign --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
